// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231125153602_AddOrganizationsDone")]
    partial class AddOrganizationsDone
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("Data.Entities.ContactEntity", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT")
                        .HasColumnName("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ContactId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("contacts");

                    b.HasData(
                        new
                        {
                            ContactId = 1,
                            BirthDate = new DateTime(2007, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "karolos@mail.com",
                            Name = "Oskar",
                            OrganizationId = 2,
                            Phone = "123123123",
                            Priority = 1,
                            Surname = "Karolczyk"
                        },
                        new
                        {
                            ContactId = 2,
                            BirthDate = new DateTime(2008, 8, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "tmurarz@mail.com",
                            Name = "Tomasz",
                            OrganizationId = 3,
                            Phone = "091912424",
                            Priority = 2,
                            Surname = "Murawski"
                        },
                        new
                        {
                            ContactId = 3,
                            BirthDate = new DateTime(2000, 1, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "boskazuzia@mail.com",
                            Name = "Zuzanna",
                            OrganizationId = 3,
                            Phone = "678998786",
                            Priority = 3,
                            Surname = "Boska"
                        });
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("Nip")
                        .HasColumnType("INTEGER");

                    b.Property<long>("Regon")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("OrganizationId");

                    b.ToTable("organizations");

                    b.HasData(
                        new
                        {
                            OrganizationId = 1,
                            Nip = 0L,
                            Regon = 0L,
                            Title = "--"
                        },
                        new
                        {
                            OrganizationId = 2,
                            Nip = 6762158990L,
                            Regon = 357191420L,
                            Title = "WSEI"
                        },
                        new
                        {
                            OrganizationId = 3,
                            Nip = 1357895472L,
                            Regon = 367891434L,
                            Title = "RAKSO"
                        },
                        new
                        {
                            OrganizationId = 4,
                            Nip = 3456789091L,
                            Regon = 872358792L,
                            Title = "Złoty kłos"
                        });
                });

            modelBuilder.Entity("Data.Entities.ContactEntity", b =>
                {
                    b.HasOne("Data.Entities.OrganizationEntity", "Organization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.OwnsOne("Data.Address", "Address", b1 =>
                        {
                            b1.Property<int>("OrganizationEntityOrganizationId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Region")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("OrganizationEntityOrganizationId");

                            b1.ToTable("organizations");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationEntityOrganizationId");

                            b1.HasData(
                                new
                                {
                                    OrganizationEntityOrganizationId = 1,
                                    City = "none",
                                    PostalCode = "00-000",
                                    Region = "none",
                                    Street = "none"
                                },
                                new
                                {
                                    OrganizationEntityOrganizationId = 2,
                                    City = "Kraków",
                                    PostalCode = "31-150",
                                    Region = "małopolska",
                                    Street = "Św. Filipa 17"
                                },
                                new
                                {
                                    OrganizationEntityOrganizationId = 3,
                                    City = "Kraków",
                                    PostalCode = "42-400",
                                    Region = "małopolska",
                                    Street = "Krowoderska 45/6"
                                },
                                new
                                {
                                    OrganizationEntityOrganizationId = 4,
                                    City = "Katowice",
                                    PostalCode = "32-120",
                                    Region = "śląsk",
                                    Street = "Piłsudskiego 99E"
                                });
                        });

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Data.Entities.OrganizationEntity", b =>
                {
                    b.Navigation("Contacts");
                });
#pragma warning restore 612, 618
        }
    }
}
